{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"docs_schema/","title":"Docs schema","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo Ses_cias.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>Coenti</code> <code>Series[str]</code> <p>pa.Field(nullable= True,description=\"C\u00f3digo da seguradora\") </p> <code>Noenti</code> <code>Series[str]</code> <p>pa.Field(nullable= True, description= \"Nome da seguradora\")</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesCias(pa.DataFrameModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para o arquivo Ses_cias.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        Coenti Series[str] : pa.Field(nullable= True,description=\"C\u00f3digo da seguradora\") \n        Noenti Series[str] : pa.Field(nullable= True, description= \"Nome da seguradora\")\n    \"\"\"\n\n    Coenti : Series[str] = pa.Field(nullable= True,description=\"C\u00f3digo da seguradora\") \n    Noenti : Series[str] = pa.Field(nullable= True, description= \"Nome da seguradora\")\n\n    class Config:\n        coerce = True\n</code></pre> <p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo Ses_ramos.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>coramo</code> <code> Series[str] </code> <p>pa.Field(nullable= True,description=\"C\u00f3digo do ramo\")</p> <code>noramo</code> <code> Series[str] </code> <p>pa.Field(nullable= True, description= \"Nome dramo\")</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesRamos(pa.DataFrameModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para o arquivo Ses_ramos.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        coramo  Series[str] :pa.Field(nullable= True,description=\"C\u00f3digo do ramo\")\n        noramo  Series[str] :pa.Field(nullable= True, description= \"Nome dramo\")\n\n\n    \"\"\"\n    coramo : Series[str] = pa.Field(nullable= True,description=\"C\u00f3digo do ramo\")\n    noramo : Series[str] = pa.Field(nullable= True, description= \"Nome dramo\")\n\n    class Config:\n        coerce = True\n</code></pre> <p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo ses_gruposramos.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>GRAID</code> <code>     Series[pd.Int64Dtype] </code> <p>pa.Field(nullable= True,description=\"Identificador\")</p> <code>GRANOME</code> <code>   Series[str] </code> <p>pa.Field(nullable= True,description=\"Nome do Grupamento de ramos\")</p> <code>GRACODIGO</code> <code> Series[pd.Int64Dtype] </code> <p>pa.Field(nullable= True,description=\"C\u00f3digo do grupamento de ramos\")</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesGrupoRamo(pa.DataFrameModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para o arquivo ses_gruposramos.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        GRAID      Series[pd.Int64Dtype] : pa.Field(nullable= True,description=\"Identificador\")\n        GRANOME\t   Series[str] : pa.Field(nullable= True,description=\"Nome do Grupamento de ramos\")\n        GRACODIGO  Series[pd.Int64Dtype] : pa.Field(nullable= True,description=\"C\u00f3digo do grupamento de ramos\")\n\n\n    \"\"\"\n\n    GRAID :Series[pd.Int64Dtype]\t = pa.Field(nullable= True,description=\"Identificador\")\n    GRANOME\t:Series[str] = pa.Field(nullable= True,description=\"Nome do Grupamento de ramos\")\n    GRACODIGO : Series[pd.Int64Dtype] = pa.Field(nullable= True,description=\"C\u00f3digo do grupamento de ramos\")\n\n    class Config:\n        coerce = True\n</code></pre> <p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo SES_UF2.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>coenti</code> <code>      Series[pd.Int64Dtype]</code> <p>C\u00f3digo da Empresa</p> <code>damesano</code> <code>    Series[pd.Int64Dtype]</code> <p>Ano e m\u00eas da informa\u00e7\u00e3o</p> <code>ramos</code> <code>       Series[pd.Int64Dtype]</code> <p>Codigo do Ramo</p> <code>UF</code> <code>          Series[str]</code> <p>Unidade Federativa</p> <code>premio_dir</code> <code>  Series[float]</code> <p>Premios Diretos</p> <code>premio_ret</code> <code>  Series[float]</code> <p>Premios Retidos</p> <code>sin_dir</code> <code>     Series[float]</code> <p>Sinistros Diretos</p> <code>prem_ret_liq</code> <code>Series[float]</code> <p>Premios Retidos</p> <code>gracodigo</code> <code>   Series[pd.Int64Dtype]</code> <p>C\u00f3digo do grupamento de ramos</p> <code>salvados</code> <code>    Series[float]</code> <p>Salvados de sinistros</p> <code>recuperacao</code> <code> Series[float]</code> <p>Recupera\u00e7\u00f5es</p> Source code in <code>src\\schemas.py</code> <pre><code>class SesUf2(pa.DataFrameModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para o arquivo SES_UF2.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes: \n        coenti       Series[pd.Int64Dtype]: C\u00f3digo da Empresa\n        damesano     Series[pd.Int64Dtype]: Ano e m\u00eas da informa\u00e7\u00e3o\n        ramos        Series[pd.Int64Dtype]: Codigo do Ramo\n        UF           Series[str]: Unidade Federativa\n        premio_dir   Series[float]: Premios Diretos\n        premio_ret   Series[float]: Premios Retidos\n        sin_dir      Series[float]: Sinistros Diretos\n        prem_ret_liq Series[float]: Premios Retidos\n        gracodigo    Series[pd.Int64Dtype]: C\u00f3digo do grupamento de ramos\n        salvados     Series[float]: Salvados de sinistros\n        recuperacao  Series[float]: Recupera\u00e7\u00f5es \n    \"\"\"\n\n    coenti        :Series[pd.Int64Dtype]  = pa.Field(nullable=True)\n    damesano      :Series[pd.Int64Dtype]  = pa.Field(nullable=True)\n    ramos         :Series[pd.Int64Dtype]  = pa.Field(nullable=True)\n    UF            :Series[str]   = pa.Field(nullable=True,description='Unidade Federativa do Risco')\n    premio_dir    :Series[float] = pa.Field(nullable=True)\n    premio_ret    :Series[float] = pa.Field(nullable=True)\n    sin_dir       :Series[float] = pa.Field(nullable=True)\n    prem_ret_liq  :Series[float] = pa.Field(nullable=True)\n    gracodigo     :Series[pd.Int64Dtype] = pa.Field(nullable=True)\n    salvados      :Series[float] = pa.Field(nullable=True)\n    recuperacao   :Series[float] = pa.Field(nullable=True)\n\n    class Config:\n        coerce = True\n</code></pre> <p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo Ses_seguros.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>damesano</code> <code>                            Series[pd.Int64Dtype]</code> <p>Ano e m\u00eas da informa\u00e7\u00e3o</p> <code>coenti</code> <code>                              Series[pd.Int64Dtype]</code> <p>C\u00f3digo da Empresa</p> <code>cogrupo</code> <code>                             Series[pd.Int64Dtype]</code> <p>Codigo do grupo</p> <code>coramo</code> <code>                              Series[pd.Int64Dtype]</code> <p>C\u00f3digo do Ramo no FIP</p> <code>premio_direto</code> <code>                       Series[float]</code> <p>Pr\u00eamio Direto (R$)</p> <code>premio_de_seguros</code> <code>                   Series[float]</code> <p>Pr\u00eamio Seguros (R$)</p> <code>premio_retido</code> <code>                       Series[float]</code> <p>Pr\u00eamio Retido (R$)</p> <code>premio_ganho</code> <code>                        Series[float]</code> <p>Pr\u00eamio Ganho (R$)</p> <code>sinistro_direto</code> <code>                     Series[float]</code> <p>Sinistro de Seguros (R$)</p> <code>sinistro_retido</code> <code>                     Series[float]</code> <p>Sinistro Retido (R$)</p> <code>desp_com</code> <code>                            Series[float]</code> <p>Despesa Comercial (R$)</p> <code>premio_emitido2</code> <code>                     Series[float]</code> <code>premio_emitido_cap</code> <code>                  Series[float]</code> <code>despesa_resseguros</code> <code>                  Series[float]</code> <code>sinistro_ocorrido</code> <code>                   Series[float]</code> <code>receita_resseguro</code> <code>                   Series[float]</code> <code>sinistros_ocorridos_cap</code> <code>             Series[float]</code> <code>recuperacao_sinistros_ocorridos_cap</code> <code> Series[float]</code> <code>rvne</code> <code>                                Series[float]</code> <code>conveniodpvat</code> <code>                       Series[float]</code> <code>consorciosefundos</code> <code>                   Series[float]</code> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesSeguros(pa.DataFrameModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para o arquivo Ses_seguros.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        damesano                             Series[pd.Int64Dtype]: Ano e m\u00eas da informa\u00e7\u00e3o\n        coenti                               Series[pd.Int64Dtype]: C\u00f3digo da Empresa\n        cogrupo                              Series[pd.Int64Dtype]: Codigo do grupo\n        coramo                               Series[pd.Int64Dtype]: C\u00f3digo do Ramo no FIP\n        premio_direto                        Series[float]: Pr\u00eamio Direto (R$)\n        premio_de_seguros                    Series[float]: Pr\u00eamio Seguros (R$)\n        premio_retido                        Series[float]: Pr\u00eamio Retido (R$)\n        premio_ganho                         Series[float]: Pr\u00eamio Ganho (R$)\n        sinistro_direto                      Series[float]: Sinistro de Seguros (R$)\n        sinistro_retido                      Series[float]: Sinistro Retido (R$)\n        desp_com                             Series[float]: Despesa Comercial (R$)\n        premio_emitido2                      Series[float]:\n        premio_emitido_cap                   Series[float]:\n        despesa_resseguros                   Series[float]:\n        sinistro_ocorrido                    Series[float]:\n        receita_resseguro                    Series[float]:\n        sinistros_ocorridos_cap              Series[float]:\n        recuperacao_sinistros_ocorridos_cap  Series[float]:\n        rvne                                 Series[float]:\n        conveniodpvat                        Series[float]:\n        consorciosefundos                    Series[float]:\n    \"\"\"\n\n\n\n    damesano                             :Series[pd.Int64Dtype] = pa.Field(nullable=True)\n    coenti                               :Series[pd.Int64Dtype] = pa.Field(nullable=True)\n    cogrupo                              :Series[pd.Int64Dtype] = pa.Field(nullable=True)\n    coramo                               :Series[pd.Int64Dtype] = pa.Field(nullable=True)\n    premio_direto                        :Series[float] = pa.Field(nullable=True)\n    premio_de_seguros                    :Series[float] = pa.Field(nullable=True)\n    premio_retido                        :Series[float] = pa.Field(nullable=True)\n    premio_ganho                         :Series[float] = pa.Field(nullable=True)\n    sinistro_direto                      :Series[float] = pa.Field(nullable=True)\n    sinistro_retido                      :Series[float] = pa.Field(nullable=True)\n    desp_com                             :Series[float] = pa.Field(nullable=True)\n    premio_emitido2                      :Series[float] = pa.Field(nullable=True)\n    premio_emitido_cap                   :Series[float] = pa.Field(nullable=True)\n    despesa_resseguros                   :Series[float] = pa.Field(nullable=True)\n    sinistro_ocorrido                    :Series[float] = pa.Field(nullable=True)\n    receita_resseguro                    :Series[float] = pa.Field(nullable=True)\n    sinistros_ocorridos_cap              :Series[float] = pa.Field(nullable=True)\n    recuperacao_sinistros_ocorridos_cap  :Series[float] = pa.Field(nullable=True)\n    rvne                                 :Series[float] = pa.Field(nullable=True)\n    conveniodpvat                        :Series[float] = pa.Field(nullable=True)\n    consorciosefundos                    :Series[float] = pa.Field(nullable=True)\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"funcoes/","title":"Func\u00f5es","text":""},{"location":"funcoes/#src.funcoes.buscar_arquivo_na_susep","title":"<code>buscar_arquivo_na_susep(path, qde_max_segundos_download=600)</code>","text":"<p>Objetivo da fun\u00e7\u00e3o: Acessa o site da Susep e realiza o download da base em formato <code>.zip</code>.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path</code> <p>Caminho onde o arquivo baixado ser\u00e1 salvo.</p> required <code>qde_max_segundos_download</code> <code>int</code> <p>Tempo m\u00e1ximo em segundos que o sistema aguardar\u00e1                              para concluir o download. Se o limite for atingido,                              o processo ser\u00e1 abortado.</p> <code>600</code> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>Retorna <code>True</code> se o download for conclu\u00eddo com sucesso, caso contr\u00e1rio,  retorna <code>False</code>.</p> Source code in <code>src\\funcoes.py</code> <pre><code>def buscar_arquivo_na_susep(path:Path ,qde_max_segundos_download:int = 600) -&gt; bool:\n    \"\"\"\n    Objetivo da fun\u00e7\u00e3o: Acessa o site da Susep e realiza o download da base em formato `.zip`.\n\n    Args:\n        path (Path): Caminho onde o arquivo baixado ser\u00e1 salvo.\n        qde_max_segundos_download (int): Tempo m\u00e1ximo em segundos que o sistema aguardar\u00e1 \n                                        para concluir o download. Se o limite for atingido, \n                                        o processo ser\u00e1 abortado.\n\n    Returns:\n        bool: Retorna `True` se o download for conclu\u00eddo com sucesso, caso contr\u00e1rio, \n            retorna `False`.\n    \"\"\"\n\n    logger.info('Iniciando processo de Busca na Susep')\n\n    try:\n        check_download = False\n        qde_max_segundos = qde_max_segundos_download\n        criar_pasta(path)\n        options = webdriver.ChromeOptions()\n        options.add_experimental_option(\"prefs\", {\n            \"download.default_directory\": path,\n            \"download.prompt_for_download\": False,\n            \"download.directory_upgrade\": True,\n            \"safebrowsing.enabled\": True\n        })\n        options.add_argument(\"--headless\")\n\n        servico = Service(ChromeDriverManager().install())\n        driver = webdriver.Chrome(service=servico,options=options)\n    except Exception as e:\n         logger.error(f'Erro na inicializa\u00e7\u00e3o do selenium : {e}')\n\n    driver.get(r'https://www2.susep.gov.br/menuestatistica/ses/principal.aspx')\n\n    time.sleep(5)\n\n    id = driver.find_element(By.ID,'GEEST')\n    if id: \n        try:\n            tag_a = id.find_element(By.TAG_NAME,'a')\n            link = tag_a.get_attribute('href')\n        except Exception as e:\n            logger.error(f'Obtendo link do download {e}')\n\n        if link:\n            driver.get(link)\n            logger.info('Efetuando download do Zip')\n\n        else: \n            logger.error('Link n\u00e3o encontrado')\n            print('link n\u00e3o encontrado')\n            driver.close()\n            return\n\n    else: \n        logger.error('Id do bot\u00e3o n\u00e3o localizado')\n        print('Id do bot\u00e3o n\u00e3o localizado')\n        driver.close()\n        return\n\n    time.sleep(5)\n    segundos = 0\n\n    while True:\n        if segundos % 10 == 0:\n                print('Efetuando Download')\n\n        segundos += 1\n        if segundos &gt; qde_max_segundos: \n            logger.error('Excedeu o tempo limite de download')\n            print('Excedeu o tempo limite de download')\n            driver.close()\n            return check_download\n\n        arquivo = glob(os.path.join(path,'*.crdownload'))\n        if arquivo:\n            time.sleep(1)\n            continue\n        break\n\n    print('Download Conclu\u00eddo')\n    logger.info('Download Conclu\u00eddo')\n    driver.close()\n    check_download = True\n    return check_download\n</code></pre>"},{"location":"funcoes/#src.funcoes.criar_pasta","title":"<code>criar_pasta(path)</code>","text":"<p>Objetivo da fun\u00e7\u00e3o: Apagar e recriar a pasta recebida no argumento Path</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path</code> <p>Path onde a pasta ser\u00e1 criada</p> required Source code in <code>src\\funcoes.py</code> <pre><code>def criar_pasta(path:Path) -&gt; None:\n    \"\"\"\n    Objetivo da fun\u00e7\u00e3o: Apagar e recriar a pasta recebida no argumento Path\n\n    Args:\n        path (Path): Path onde a pasta ser\u00e1 criada\n\n\n    \"\"\"\n\n    try:\n        shutil.rmtree(path,ignore_errors=True)\n    except:\n        ...\n\n    os.makedirs(path,exist_ok=True)\n</code></pre>"},{"location":"funcoes/#src.funcoes.descompactar_zip","title":"<code>descompactar_zip(path_origem, check_sucesso=False)</code>","text":"<p>Objetivo da fun\u00e7\u00e3o: Verifica a exist\u00eancia de arquivos <code>.zip</code> e realiza a descompacta\u00e7\u00e3o.</p> <p>Parameters:</p> Name Type Description Default <code>path_origem</code> <code>Path</code> <p>Caminho onde os arquivos <code>.zip</code> ser\u00e3o procurados.</p> required <code>check_sucesso</code> <code>int</code> <p>Retorno da fun\u00e7\u00e3o <code>buscar_arquivo_na_susep()</code>. Se a fun\u00e7\u00e3o                  for bem-sucedida, o valor ser\u00e1 <code>True</code>, permitindo a                  descompacta\u00e7\u00e3o.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>Retorna <code>True</code> se a descompacta\u00e7\u00e3o for conclu\u00edda com sucesso, caso contr\u00e1rio,  retorna <code>False</code>.</p> Source code in <code>src\\funcoes.py</code> <pre><code>def descompactar_zip(path_origem,check_sucesso:bool = False) -&gt; bool:\n    \"\"\"\n    Objetivo da fun\u00e7\u00e3o: Verifica a exist\u00eancia de arquivos `.zip` e realiza a descompacta\u00e7\u00e3o.\n\n    Args:\n        path_origem (Path): Caminho onde os arquivos `.zip` ser\u00e3o procurados.\n        check_sucesso (int): Retorno da fun\u00e7\u00e3o `buscar_arquivo_na_susep()`. Se a fun\u00e7\u00e3o \n                            for bem-sucedida, o valor ser\u00e1 `True`, permitindo a \n                            descompacta\u00e7\u00e3o.\n\n    Returns:\n        bool: Retorna `True` se a descompacta\u00e7\u00e3o for conclu\u00edda com sucesso, caso contr\u00e1rio, \n            retorna `False`.\n    \"\"\"\n\n\n    try:\n        if check_sucesso:\n            arquivos_csv =  glob(os.path.join(path_origem,'*.csv'))\n            for arq in arquivos_csv:\n                os.remove(arq)\n\n        time.sleep(5)\n        if check_sucesso:\n            arquivos = glob(os.path.join(path_origem,'*.zip'))\n\n            for arquivo in arquivos:\n                if arquivo.endswith('.zip'):\n                    caminho_completo = os.path.join(path_origem, arquivo)\n\n                    with zipfile.ZipFile(caminho_completo, 'r') as zip_ref:\n                        zip_ref.extractall(path_origem)\n        check_zip =True\n        logger.info('Descompacta\u00e7\u00e3o efetuada')\n    except Exception as e:\n        check_zip = False\n        logger.error(f'Erro na Descompacta\u00e7\u00e3o {e}')\n    return check_zip\n</code></pre>"},{"location":"funcoes/#src.funcoes.iniciar_logs","title":"<code>iniciar_logs(path)</code>","text":"<p>Objetivo da fun\u00e7\u00e3o: Inicia uma Se\u00e7\u00e3o do logger</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path</code> <p>Caminho onde iremos criar os arquivos .log</p> required Source code in <code>src\\funcoes.py</code> <pre><code>def iniciar_logs(path:Path)-&gt; None:\n    \"\"\"\n    Objetivo da fun\u00e7\u00e3o: Inicia uma Se\u00e7\u00e3o do logger\n\n    Args:\n        path (Path): Caminho onde iremos criar os arquivos .log\n\n    \"\"\"\n\n    logger.add(os.path.join(path,'LOGS_EXTRACAO_SUSEP.log'),level='INFO')\n    logger.add(os.path.join(path,'LOGS_EXTRACAO_SUSEP_ERROS.log'),level='ERROR')\n</code></pre>"},{"location":"funcoes/#src.funcoes.validar_schemas_obrigatorios","title":"<code>validar_schemas_obrigatorios(path, check_sucesso_zip=False)</code>","text":"<p>Objetivo da fun\u00e7\u00e3o: Realiza a valida\u00e7\u00e3o da estrutura dos arquivos CSV.</p> <p>Parameters:</p> Name Type Description Default <code>path_origem</code> <code>Path</code> <p>Caminho onde os arquivos <code>.csv</code> ser\u00e3o procurados.</p> required <code>check_sucesso_zip</code> <code>int</code> <p>Retorno da fun\u00e7\u00e3o <code>descompactar_zip()</code>. Se a fun\u00e7\u00e3o                      for bem-sucedida, o valor ser\u00e1 <code>True</code>, permitindo                      a continuidade da valida\u00e7\u00e3o.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>bool</code> <p>Retorna <code>True</code> se a valida\u00e7\u00e3o for conclu\u00edda com sucesso, caso contr\u00e1rio,  retorna <code>False</code>.</p> Source code in <code>src\\funcoes.py</code> <pre><code>def validar_schemas_obrigatorios(path:Path,check_sucesso_zip:bool = False):\n    \"\"\"\n    Objetivo da fun\u00e7\u00e3o: Realiza a valida\u00e7\u00e3o da estrutura dos arquivos CSV.\n\n    Args:\n        path_origem (Path): Caminho onde os arquivos `.csv` ser\u00e3o procurados.\n        check_sucesso_zip (int): Retorno da fun\u00e7\u00e3o `descompactar_zip()`. Se a fun\u00e7\u00e3o \n                                for bem-sucedida, o valor ser\u00e1 `True`, permitindo \n                                a continuidade da valida\u00e7\u00e3o.\n\n    Returns:\n        bool: Retorna `True` se a valida\u00e7\u00e3o for conclu\u00edda com sucesso, caso contr\u00e1rio, \n            retorna `False`.\n    \"\"\"\n\n\n    check_validacao = True\n    encoding_utilizado = 'ISO-8859-1'\n    separador = ';'\n    decimal = ','\n    lazy = False\n\n    if check_sucesso_zip:\n\n        try:\n            print('Ses_cias')\n            schemas.SchemaSesCias.validate(pd.read_csv(os.path.join(path,\"Ses_cias.csv\"),encoding=encoding_utilizado,sep=separador),lazy=  lazy)\n            print('Ses_ramos')\n            schemas.SchemaSesRamos.validate(pd.read_csv(os.path.join(path,\"Ses_ramos.csv\"),encoding=encoding_utilizado,sep=separador),lazy=  lazy)\n            print('ses_gruposramos')\n            schemas.SchemaSesGrupoRamo(pd.read_csv(os.path.join(path,\"ses_gruposramos.csv\"),encoding=encoding_utilizado,sep=separador),lazy=  lazy)\n            print('Ses_seguros')\n            schemas.SchemaSesSeguros.validate(pd.read_csv(os.path.join(path,\"Ses_seguros.csv\"),encoding=encoding_utilizado,sep=separador,decimal=decimal),lazy=  lazy)\n            print('SES_UF2')\n            schemas.SesUf2.validate(pd.read_csv(os.path.join(path,\"SES_UF2.csv\"),encoding=encoding_utilizado,sep=separador,decimal=decimal),lazy=  lazy)\n            print('Ses_campos')\n            schemas.SchemaSesCampos.validate(pd.read_csv(os.path.join(path,\"Ses_campos.csv\"),encoding=encoding_utilizado,sep=separador),lazy=  lazy)\n            print('SES_Balanco')\n            schemas.SchemaSesBalanco.validate(pd.read_csv(os.path.join(path,\"SES_Balanco.csv\"),encoding=encoding_utilizado,sep=separador,decimal=decimal),lazy=  lazy)\n            print('Ses_Dados_Cap')\n            schemas.SchemaSesDadosCap.validate(pd.read_csv(os.path.join(path,\"Ses_Dados_Cap.csv\"),encoding=encoding_utilizado,sep=separador,decimal=decimal),lazy=  lazy)\n            print('ses_cap_uf')\n            schemas.SchemaSesCapUf.validate(pd.read_csv(os.path.join(path,\"ses_cap_uf.csv\"),encoding=encoding_utilizado,sep=separador,decimal=decimal),lazy=  lazy)\n            print('SES_ValoresMovRamos')\n            schemas.SchemaSesValoresMovRamos.validate(pd.read_csv(os.path.join(path,\"SES_ValoresMovRamos.csv\"),encoding=encoding_utilizado,sep=separador,decimal=decimal),lazy=  lazy)\n            print('ses_valoresresmovgrupos')\n            schemas.SchemaSesValoresResMovMovGrupos.validate(pd.read_csv(os.path.join(path,\"ses_valoresresmovgrupos.csv\"),encoding = encoding_utilizado, sep = separador , decimal=decimal ) ,lazy =  lazy)\n\n            print('Sucesso na valida\u00e7\u00e3o')\n            logger.info(f'Schemas validados com sucesso')\n            return check_validacao\n        except Exception as e:\n            check_validacao = False\n            logger.error(f'Erro na valida\u00e7\u00e3o dos Schemas {e}')\n            return  check_validacao\n</code></pre>"},{"location":"schemas/schema_SesBalanco/","title":"Ses_Balanco.csv","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo SES_Balanco.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>coenti</code> <code>  Series[pd.Int64Dtype]  </code> <p>pa.Field(nullable=True,description='C\u00f3digo da Empresa')</p> <code>damesano</code> <code>Series[Int64Dtype]</code> <p>pa.Field(nullable=True,description='Ano e m\u00eas da informa\u00e7\u00e3o') </p> <code>cmpid</code> <code>   Series[pd.Int64Dtype]  </code> <p>pa.Field(nullable=True,description='Codigo do campo ')</p> <code>valor</code> <code>   Series[float]  </code> <p>pa.Field(nullable=True,description='Valor')</p> <code>seq</code> <code>     Series[pd.Int64Dtype]  </code> <p>pa.Field(nullable=True,description='Ordem do campo no Balanco')</p> <code>quadro</code> <code>  Series[str]    </code> <p>pa.Field(nullable=True,description='Quadro a qual pertence o campo')</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesBalanco(pa.DataFrameModel):\n    ''' \n    Esquema de valida\u00e7\u00e3o para o arquivo SES_Balanco.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        coenti\t Series[pd.Int64Dtype]  : pa.Field(nullable=True,description='C\u00f3digo da Empresa')\n        damesano Series[pd.Int64Dtype]  : pa.Field(nullable=True,description='Ano e m\u00eas da informa\u00e7\u00e3o')\t\n        cmpid\t Series[pd.Int64Dtype]  : pa.Field(nullable=True,description='Codigo do campo ')\n        valor\t Series[float]  : pa.Field(nullable=True,description='Valor')\n        seq      Series[pd.Int64Dtype]  : pa.Field(nullable=True,description='Ordem do campo no Balanco')\n        quadro   Series[str]    : pa.Field(nullable=True,description='Quadro a qual pertence o campo')\n\n    '''\n    coenti\t :Series[pd.Int64Dtype]  = pa.Field(nullable=True,description='C\u00f3digo da Empresa')\n    damesano :Series[pd.Int64Dtype]  = pa.Field(nullable=True,description='Ano e m\u00eas da informa\u00e7\u00e3o')\t\n    cmpid\t :Series[pd.Int64Dtype]  = pa.Field(nullable=True,description='Codigo do campo ')\n    valor\t :Series[float]  = pa.Field(nullable=True,description='Valor')\n    seq      :Series[pd.Int64Dtype]  = pa.Field(nullable=True,description='Ordem do campo no Balanco')\n    quadro   :Series[str]    = pa.Field(nullable=True,description='Quadro a qual pertence o campo')\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"schemas/schema_SesCampos/","title":"Ses_campos.csv","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo Ses_campos.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>nuitem</code> <code>      Series[int]   </code> <p>pa.Field(nullable=True,description ='N\u00famero do Campo')</p> <code>noitem</code> <code>      Series[str]   </code> <p>pa.Field(nullable=True,description = 'Nome do Campo')</p> <code>nuquad</code> <code>      Series[str]   </code> <p>pa.Field(nullable=True,description ='Quadro correspondente do FIP (22A, 22P,  23...)' )</p> <code>mercado</code> <code>     Series[str]   </code> <p>pa.Field(nullable=True,description = 'Identificador do Mercado Supervisionado (C, P ou S) ')</p> <code>inivigencia</code> <code> Series[pd.Int64Dtype] </code> <p>pa. Field(nullable=True,description = 'In\u00edcio de vig\u00eancia do campo')</p> <code>fimvigencia</code> <code> Series[pd.Int64Dtype] </code> <p>pa.Field(nullable=True,description = 'Fim de vig\u00eancia do campo')</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesCampos(pa.DataFrameModel):\n    ''' \n     Esquema de valida\u00e7\u00e3o para o arquivo Ses_campos.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        nuitem       Series[int]   : pa.Field(nullable=True,description ='N\u00famero do Campo')\n        noitem       Series[str]   : pa.Field(nullable=True,description = 'Nome do Campo')\n        nuquad       Series[str]   : pa.Field(nullable=True,description ='Quadro correspondente do FIP (22A, 22P,  23...)' )\n        mercado      Series[str]   : pa.Field(nullable=True,description = 'Identificador do Mercado Supervisionado (C, P ou S) ')\n        inivigencia  Series[pd.Int64Dtype] : pa. Field(nullable=True,description = 'In\u00edcio de vig\u00eancia do campo')\n        fimvigencia  Series[pd.Int64Dtype] : pa.Field(nullable=True,description = 'Fim de vig\u00eancia do campo')\n\n\n\n    '''\n\n    nuitem      : Series[int]   = pa.Field(nullable=True,description ='N\u00famero do Campo')\n    noitem      : Series[str]   = pa.Field(nullable=True,description = 'Nome do Campo')\n    nuquad      : Series[str]   = pa.Field(nullable=True,description ='Quadro correspondente do FIP (22A, 22P,  23...)' )\n    mercado     : Series[str]   = pa.Field(nullable=True,description = 'Identificador do Mercado Supervisionado (C, P ou S) ')\n    inivigencia : Series[pd.Int64Dtype] = pa. Field(nullable=True,description = 'In\u00edcio de vig\u00eancia do campo')\n    fimvigencia : Series[pd.Int64Dtype] = pa.Field(nullable=True,description = 'Fim de vig\u00eancia do campo')\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"schemas/schema_SesCapUf/","title":"Ses_Cap_UF.csv","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo ses_cap_uf.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>COENTI</code> <code>      Series[pd.Int64Dtype] </code> <p>pa.Field(nullable=True,description='C\u00f3digo da Empresa')</p> <code>DAMESANO</code> <code>    Series[pd.Int64Dtype] </code> <p>pa.Field(nullable=True,description='Ano e m\u00eas da informa\u00e7\u00e3o')</p> <code>UF</code> <code>          Series[str]   </code> <p>pa.Field(nullable=True,description='Unidade Federativa')</p> <code>PREMIO</code> <code>      Series[float] </code> <p>pa.Field(nullable=True,description='Pr\u00eamios (R$)')</p> <code>RESGPAGO</code> <code>    Series[float] </code> <p>pa.Field(nullable=True,description='Resgates Pagos (R$)')</p> <code>SORTPAGO</code> <code>    Series[float] </code> <p>pa.Field(nullable=True,description='Sorteios Pagos (R$)')</p> <code>NUMPARTIC</code> <code>   Series[float] </code> <p>pa.Field(nullable=True,description='M\u00e9dia de Participantes no Per\u00edodo')</p> <code>RESGATANTES</code> <code> Series[float] </code> <p>pa.Field(nullable=True,description='Resgatantes')</p> <code>SORTEIOS</code> <code>    Series[float] </code> <p>pa.Field(nullable=True,description='Sorteios')</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesCapUf(pa.DataFrameModel):\n    '''\n    Esquema de valida\u00e7\u00e3o para o arquivo ses_cap_uf.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        COENTI       Series[pd.Int64Dtype] : pa.Field(nullable=True,description='C\u00f3digo da Empresa')\n        DAMESANO     Series[pd.Int64Dtype] : pa.Field(nullable=True,description='Ano e m\u00eas da informa\u00e7\u00e3o')\n        UF           Series[str]   : pa.Field(nullable=True,description='Unidade Federativa')\n        PREMIO       Series[float] : pa.Field(nullable=True,description='Pr\u00eamios (R$)')\n        RESGPAGO     Series[float] : pa.Field(nullable=True,description='Resgates Pagos (R$)')\n        SORTPAGO     Series[float] : pa.Field(nullable=True,description='Sorteios Pagos (R$)')\n        NUMPARTIC    Series[float] : pa.Field(nullable=True,description='M\u00e9dia de Participantes no Per\u00edodo')\n        RESGATANTES  Series[float] : pa.Field(nullable=True,description='Resgatantes')\n        SORTEIOS     Series[float] : pa.Field(nullable=True,description='Sorteios')\n\n    '''\n    COENTI         : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='C\u00f3digo da Empresa')\n    DAMESANO       : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='Ano e m\u00eas da informa\u00e7\u00e3o')\n    UF             : Series[str] = pa.Field(nullable=True,description='Unidade Federativa')\n    PREMIO         : Series[float] = pa.Field(nullable=True,description='Pr\u00eamios (R$)')\n    RESGPAGO       : Series[float] = pa.Field(nullable=True,description='Resgates Pagos (R$)')\n    SORTPAGO       : Series[float] = pa.Field(nullable=True,description='Sorteios Pagos (R$)')\n    NUMPARTIC      : Series[float] = pa.Field(nullable=True,description='M\u00e9dia de Participantes no Per\u00edodo')\n    RESGATANTES    : Series[float] = pa.Field(nullable=True,description='Resgatantes')\n    SORTEIOS       : Series[float] = pa.Field(nullable=True,description='Sorteios')\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"schemas/schema_SesCias/","title":"Ses_cias.csv","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo Ses_cias.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>Coenti</code> <code>Series[str]</code> <p>pa.Field(nullable= True,description=\"C\u00f3digo da seguradora\") </p> <code>Noenti</code> <code>Series[str]</code> <p>pa.Field(nullable= True, description= \"Nome da seguradora\")</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesCias(pa.DataFrameModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para o arquivo Ses_cias.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        Coenti Series[str] : pa.Field(nullable= True,description=\"C\u00f3digo da seguradora\") \n        Noenti Series[str] : pa.Field(nullable= True, description= \"Nome da seguradora\")\n    \"\"\"\n\n    Coenti : Series[str] = pa.Field(nullable= True,description=\"C\u00f3digo da seguradora\") \n    Noenti : Series[str] = pa.Field(nullable= True, description= \"Nome da seguradora\")\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"schemas/schema_SesDadosCap/","title":"Ses_Dados_Cap.csv","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo SES_Balanco.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>coenti</code> <code>         Series[pd.Int64Dtype] </code> <p>pa.Field(nullable=True,description='Ano e m\u00eas da informa\u00e7\u00e3o')</p> <code>damesano</code> <code>           Series[pd.Int64Dtype] </code> <p>pa.Field(nullable=True,description='C\u00f3digo da Empresa')</p> <code>codModal</code> <code>           Series[pd.Int64Dtype] </code> <p>pa.Field(nullable=True,description='C\u00f3digo da modalidade')</p> <code>modalidade</code> <code>         Series[str]   </code> <p>pa.Field(nullable=True,description='Descri\u00e7\u00e3o da modalidade (Tradicional, Compra-Programada, Popular, Incentivo, Antes Circ 365 e N\u00e3o Adequado, Filantropia Premi\u00e1vel, Instrumento de Garantia)')</p> <code>receitasCap</code> <code>        Series[float] </code> <p>pa.Field(nullable=True,description='Total de receitas')</p> <code>valorResg</code> <code>          Series[float] </code> <p>pa.Field(nullable=True,description='Total de resgates')</p> <code>sorteiosPagos</code> <code>  Series[float] </code> <p>pa.Field(nullable=True,description='Total de sorteios pagos')</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesDadosCap(pa.DataFrameModel):\n    ''' \n    Esquema de valida\u00e7\u00e3o para o arquivo SES_Balanco.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        coenti\t        Series[pd.Int64Dtype] : pa.Field(nullable=True,description='Ano e m\u00eas da informa\u00e7\u00e3o')\n        damesano\t    Series[pd.Int64Dtype] : pa.Field(nullable=True,description='C\u00f3digo da Empresa')\n        codModal\t    Series[pd.Int64Dtype] : pa.Field(nullable=True,description='C\u00f3digo da modalidade')\n        modalidade\t    Series[str]   : pa.Field(nullable=True,description='Descri\u00e7\u00e3o da modalidade (Tradicional, Compra-Programada, Popular, Incentivo, Antes Circ 365 e N\u00e3o Adequado, Filantropia Premi\u00e1vel, Instrumento de Garantia)')\n        receitasCap\t    Series[float] : pa.Field(nullable=True,description='Total de receitas')\n        valorResg\t    Series[float] : pa.Field(nullable=True,description='Total de resgates')\n        sorteiosPagos   Series[float] : pa.Field(nullable=True,description='Total de sorteios pagos')\n    '''\n    coenti              : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='Ano e m\u00eas da informa\u00e7\u00e3o')\n    damesano            : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='C\u00f3digo da Empresa')\n    codModal            : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='C\u00f3digo da modalidade')\n    modalidade          : Series[str]   = pa.Field(nullable=True,description='Descri\u00e7\u00e3o da modalidade (Tradicional, Compra-Programada, Popular, Incentivo, Antes Circ 365 e N\u00e3o Adequado, Filantropia Premi\u00e1vel, Instrumento de Garantia)')\n    receitasCap\t        : Series[float] = pa.Field(nullable=True,description='Total de receitas')\n    valorResg           : Series[float] = pa.Field(nullable=True,description='Total de resgates')\n    sorteiosPagos       : Series[float] = pa.Field(nullable=True,description='Total de sorteios pagos')\n\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"schemas/schema_SesGrupoRamo/","title":"Ses_gruposramos.csv","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo ses_gruposramos.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>GRAID</code> <code>     Series[pd.Int64Dtype] </code> <p>pa.Field(nullable= True,description=\"Identificador\")</p> <code>GRANOME</code> <code>   Series[str] </code> <p>pa.Field(nullable= True,description=\"Nome do Grupamento de ramos\")</p> <code>GRACODIGO</code> <code> Series[pd.Int64Dtype] </code> <p>pa.Field(nullable= True,description=\"C\u00f3digo do grupamento de ramos\")</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesGrupoRamo(pa.DataFrameModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para o arquivo ses_gruposramos.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        GRAID      Series[pd.Int64Dtype] : pa.Field(nullable= True,description=\"Identificador\")\n        GRANOME\t   Series[str] : pa.Field(nullable= True,description=\"Nome do Grupamento de ramos\")\n        GRACODIGO  Series[pd.Int64Dtype] : pa.Field(nullable= True,description=\"C\u00f3digo do grupamento de ramos\")\n\n\n    \"\"\"\n\n    GRAID :Series[pd.Int64Dtype]\t = pa.Field(nullable= True,description=\"Identificador\")\n    GRANOME\t:Series[str] = pa.Field(nullable= True,description=\"Nome do Grupamento de ramos\")\n    GRACODIGO : Series[pd.Int64Dtype] = pa.Field(nullable= True,description=\"C\u00f3digo do grupamento de ramos\")\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"schemas/schema_SesRamos/","title":"Ses_ramos.csv","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo Ses_ramos.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>coramo</code> <code> Series[str] </code> <p>pa.Field(nullable= True,description=\"C\u00f3digo do ramo\")</p> <code>noramo</code> <code> Series[str] </code> <p>pa.Field(nullable= True, description= \"Nome dramo\")</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesRamos(pa.DataFrameModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para o arquivo Ses_ramos.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        coramo  Series[str] :pa.Field(nullable= True,description=\"C\u00f3digo do ramo\")\n        noramo  Series[str] :pa.Field(nullable= True, description= \"Nome dramo\")\n\n\n    \"\"\"\n    coramo : Series[str] = pa.Field(nullable= True,description=\"C\u00f3digo do ramo\")\n    noramo : Series[str] = pa.Field(nullable= True, description= \"Nome dramo\")\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"schemas/schema_SesSeguros/","title":"Ses_seguros.csv","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo Ses_seguros.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>damesano</code> <code>                            Series[pd.Int64Dtype]</code> <p>Ano e m\u00eas da informa\u00e7\u00e3o</p> <code>coenti</code> <code>                              Series[pd.Int64Dtype]</code> <p>C\u00f3digo da Empresa</p> <code>cogrupo</code> <code>                             Series[pd.Int64Dtype]</code> <p>Codigo do grupo</p> <code>coramo</code> <code>                              Series[pd.Int64Dtype]</code> <p>C\u00f3digo do Ramo no FIP</p> <code>premio_direto</code> <code>                       Series[float]</code> <p>Pr\u00eamio Direto (R$)</p> <code>premio_de_seguros</code> <code>                   Series[float]</code> <p>Pr\u00eamio Seguros (R$)</p> <code>premio_retido</code> <code>                       Series[float]</code> <p>Pr\u00eamio Retido (R$)</p> <code>premio_ganho</code> <code>                        Series[float]</code> <p>Pr\u00eamio Ganho (R$)</p> <code>sinistro_direto</code> <code>                     Series[float]</code> <p>Sinistro de Seguros (R$)</p> <code>sinistro_retido</code> <code>                     Series[float]</code> <p>Sinistro Retido (R$)</p> <code>desp_com</code> <code>                            Series[float]</code> <p>Despesa Comercial (R$)</p> <code>premio_emitido2</code> <code>                     Series[float]</code> <code>premio_emitido_cap</code> <code>                  Series[float]</code> <code>despesa_resseguros</code> <code>                  Series[float]</code> <code>sinistro_ocorrido</code> <code>                   Series[float]</code> <code>receita_resseguro</code> <code>                   Series[float]</code> <code>sinistros_ocorridos_cap</code> <code>             Series[float]</code> <code>recuperacao_sinistros_ocorridos_cap</code> <code> Series[float]</code> <code>rvne</code> <code>                                Series[float]</code> <code>conveniodpvat</code> <code>                       Series[float]</code> <code>consorciosefundos</code> <code>                   Series[float]</code> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesSeguros(pa.DataFrameModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para o arquivo Ses_seguros.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        damesano                             Series[pd.Int64Dtype]: Ano e m\u00eas da informa\u00e7\u00e3o\n        coenti                               Series[pd.Int64Dtype]: C\u00f3digo da Empresa\n        cogrupo                              Series[pd.Int64Dtype]: Codigo do grupo\n        coramo                               Series[pd.Int64Dtype]: C\u00f3digo do Ramo no FIP\n        premio_direto                        Series[float]: Pr\u00eamio Direto (R$)\n        premio_de_seguros                    Series[float]: Pr\u00eamio Seguros (R$)\n        premio_retido                        Series[float]: Pr\u00eamio Retido (R$)\n        premio_ganho                         Series[float]: Pr\u00eamio Ganho (R$)\n        sinistro_direto                      Series[float]: Sinistro de Seguros (R$)\n        sinistro_retido                      Series[float]: Sinistro Retido (R$)\n        desp_com                             Series[float]: Despesa Comercial (R$)\n        premio_emitido2                      Series[float]:\n        premio_emitido_cap                   Series[float]:\n        despesa_resseguros                   Series[float]:\n        sinistro_ocorrido                    Series[float]:\n        receita_resseguro                    Series[float]:\n        sinistros_ocorridos_cap              Series[float]:\n        recuperacao_sinistros_ocorridos_cap  Series[float]:\n        rvne                                 Series[float]:\n        conveniodpvat                        Series[float]:\n        consorciosefundos                    Series[float]:\n    \"\"\"\n\n\n\n    damesano                             :Series[pd.Int64Dtype] = pa.Field(nullable=True)\n    coenti                               :Series[pd.Int64Dtype] = pa.Field(nullable=True)\n    cogrupo                              :Series[pd.Int64Dtype] = pa.Field(nullable=True)\n    coramo                               :Series[pd.Int64Dtype] = pa.Field(nullable=True)\n    premio_direto                        :Series[float] = pa.Field(nullable=True)\n    premio_de_seguros                    :Series[float] = pa.Field(nullable=True)\n    premio_retido                        :Series[float] = pa.Field(nullable=True)\n    premio_ganho                         :Series[float] = pa.Field(nullable=True)\n    sinistro_direto                      :Series[float] = pa.Field(nullable=True)\n    sinistro_retido                      :Series[float] = pa.Field(nullable=True)\n    desp_com                             :Series[float] = pa.Field(nullable=True)\n    premio_emitido2                      :Series[float] = pa.Field(nullable=True)\n    premio_emitido_cap                   :Series[float] = pa.Field(nullable=True)\n    despesa_resseguros                   :Series[float] = pa.Field(nullable=True)\n    sinistro_ocorrido                    :Series[float] = pa.Field(nullable=True)\n    receita_resseguro                    :Series[float] = pa.Field(nullable=True)\n    sinistros_ocorridos_cap              :Series[float] = pa.Field(nullable=True)\n    recuperacao_sinistros_ocorridos_cap  :Series[float] = pa.Field(nullable=True)\n    rvne                                 :Series[float] = pa.Field(nullable=True)\n    conveniodpvat                        :Series[float] = pa.Field(nullable=True)\n    consorciosefundos                    :Series[float] = pa.Field(nullable=True)\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"schemas/schema_SesUf2/","title":"Ses_uf2.csv","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo SES_UF2.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>coenti</code> <code>      Series[pd.Int64Dtype]</code> <p>C\u00f3digo da Empresa</p> <code>damesano</code> <code>    Series[pd.Int64Dtype]</code> <p>Ano e m\u00eas da informa\u00e7\u00e3o</p> <code>ramos</code> <code>       Series[pd.Int64Dtype]</code> <p>Codigo do Ramo</p> <code>UF</code> <code>          Series[str]</code> <p>Unidade Federativa</p> <code>premio_dir</code> <code>  Series[float]</code> <p>Premios Diretos</p> <code>premio_ret</code> <code>  Series[float]</code> <p>Premios Retidos</p> <code>sin_dir</code> <code>     Series[float]</code> <p>Sinistros Diretos</p> <code>prem_ret_liq</code> <code>Series[float]</code> <p>Premios Retidos</p> <code>gracodigo</code> <code>   Series[pd.Int64Dtype]</code> <p>C\u00f3digo do grupamento de ramos</p> <code>salvados</code> <code>    Series[float]</code> <p>Salvados de sinistros</p> <code>recuperacao</code> <code> Series[float]</code> <p>Recupera\u00e7\u00f5es</p> Source code in <code>src\\schemas.py</code> <pre><code>class SesUf2(pa.DataFrameModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para o arquivo SES_UF2.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes: \n        coenti       Series[pd.Int64Dtype]: C\u00f3digo da Empresa\n        damesano     Series[pd.Int64Dtype]: Ano e m\u00eas da informa\u00e7\u00e3o\n        ramos        Series[pd.Int64Dtype]: Codigo do Ramo\n        UF           Series[str]: Unidade Federativa\n        premio_dir   Series[float]: Premios Diretos\n        premio_ret   Series[float]: Premios Retidos\n        sin_dir      Series[float]: Sinistros Diretos\n        prem_ret_liq Series[float]: Premios Retidos\n        gracodigo    Series[pd.Int64Dtype]: C\u00f3digo do grupamento de ramos\n        salvados     Series[float]: Salvados de sinistros\n        recuperacao  Series[float]: Recupera\u00e7\u00f5es \n    \"\"\"\n\n    coenti        :Series[pd.Int64Dtype]  = pa.Field(nullable=True)\n    damesano      :Series[pd.Int64Dtype]  = pa.Field(nullable=True)\n    ramos         :Series[pd.Int64Dtype]  = pa.Field(nullable=True)\n    UF            :Series[str]   = pa.Field(nullable=True,description='Unidade Federativa do Risco')\n    premio_dir    :Series[float] = pa.Field(nullable=True)\n    premio_ret    :Series[float] = pa.Field(nullable=True)\n    sin_dir       :Series[float] = pa.Field(nullable=True)\n    prem_ret_liq  :Series[float] = pa.Field(nullable=True)\n    gracodigo     :Series[pd.Int64Dtype] = pa.Field(nullable=True)\n    salvados      :Series[float] = pa.Field(nullable=True)\n    recuperacao   :Series[float] = pa.Field(nullable=True)\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"schemas/schema_SesValoresMovRamos/","title":"Ses_ValoresMovRamos.csv","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo SES_ValoresMovRamos.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Attributes:</p> Name Type Description <code>coenti</code> <code>      Series[pd.Int64Dtype] </code> <code>damesano</code> <code>    Series[pd.Int64Dtype] </code> <code>cmpid</code> <code>       Series[pd.Int64Dtype] </code> <code>ramcodigo</code> <code>   Series[pd.Int64Dtype] </code> <code>gracodigo</code> <code>   Series[pd.Int64Dtype] </code> <code>valor</code> <code>       Series[float] </code> <code>seq</code> <code>         Series[pd.Int64Dtype] </code> <code>quadro</code> <code>      Series[pd.Int64Dtype] </code> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesValoresMovRamos(pa.DataFrameModel):\n    '''\n    Esquema de valida\u00e7\u00e3o para o arquivo SES_ValoresMovRamos.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    Attributes:\n        coenti       Series[pd.Int64Dtype] :\n        damesano     Series[pd.Int64Dtype] :\n        cmpid        Series[pd.Int64Dtype] :\n        ramcodigo    Series[pd.Int64Dtype] :\n        gracodigo    Series[pd.Int64Dtype] :\n        valor        Series[float] :\n        seq          Series[pd.Int64Dtype] :\n        quadro       Series[pd.Int64Dtype] :\n\n\n\n    '''\n\n\n    coenti      : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='')\n    damesano    : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='')\n    cmpid       : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='')\n    ramcodigo   : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='')\n    gracodigo   : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='')\n    valor       : Series[float] = pa.Field(nullable=True,description='')\n    seq         : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='')\n    quadro      : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='')\n\n\n    class Config:\n        coerce = True\n</code></pre>"},{"location":"schemas/schema_SesValoresResMovMovGrupos/","title":"schema SesValoresResMovMovGrupos","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Esquema de valida\u00e7\u00e3o para o arquivo ses_valoresresmovgrupos.csv</p> <p>Esta classe valida os dados do arquivo, garantindo a consist\u00eancia  dos tipos e a conformidade com as regras definidas.</p> <p>Resseguros: Pr\u00eamios Ganhos  e Sinistros Retidos (Utilizar em conjunto com a tabela  ses_campos associando o CMPID - SES_VALORESRESMOVGRUPOS   com o NUITEM - SES_campos)</p> <p>Attributes:</p> Name Type Description <code>COENTI</code> <code>    Series[pd.Int64Dtype] </code> <p>C\u00f3digo da Empresa</p> <code>DAMESANO</code> <code>  Series[pd.Int64Dtype] </code> <p>Ano e m\u00eas da informa\u00e7\u00e3o'</p> <code>CMPID</code> <code>     Series[pd.Int64Dtype] </code> <p>codigo do campo na tabela ses_campos</p> <code>GRACODIGO</code> <code> Series[pd.Int64Dtype] </code> <p>C\u00f3digo do grupamento de ramos</p> <code>VALOR</code> <code>     Series[float] </code> <p>Valor</p> <code>ID</code> <code>        Series[pd.Int64Dtype] </code> <p>Identificador</p> Source code in <code>src\\schemas.py</code> <pre><code>class SchemaSesValoresResMovMovGrupos(pa.DataFrameModel):\n    '''\n    Esquema de valida\u00e7\u00e3o para o arquivo ses_valoresresmovgrupos.csv\n\n    Esta classe valida os dados do arquivo, garantindo a consist\u00eancia \n    dos tipos e a conformidade com as regras definidas.\n\n    **Resseguros**: Pr\u00eamios Ganhos  e Sinistros Retidos (Utilizar em conjunto com a tabela  ses_campos associando o CMPID - SES_VALORESRESMOVGRUPOS   com o NUITEM - SES_campos)\n\n    Attributes:\n        COENTI     Series[pd.Int64Dtype] :C\u00f3digo da Empresa\n        DAMESANO   Series[pd.Int64Dtype] :Ano e m\u00eas da informa\u00e7\u00e3o'\n        CMPID      Series[pd.Int64Dtype] :codigo do campo na tabela ses_campos\n        GRACODIGO  Series[pd.Int64Dtype] :C\u00f3digo do grupamento de ramos\n        VALOR      Series[float] :Valor\n        ID         Series[pd.Int64Dtype] :Identificador\n\n\n    '''\n    COENTI      : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='C\u00f3digo da Empresa')\n    DAMESANO    : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='Ano e m\u00eas da informa\u00e7\u00e3o')\n    CMPID       : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='codigo do campo na tabela ses_campos')\n    GRACODIGO   : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='C\u00f3digo do grupamento de ramos')\n    VALOR       : Series[float] = pa.Field(nullable=True,description='Valor ')\n    ID          : Series[pd.Int64Dtype] = pa.Field(nullable=True,description='Identificador')\n\n    class Config:\n        coerce = True \n</code></pre>"}]}